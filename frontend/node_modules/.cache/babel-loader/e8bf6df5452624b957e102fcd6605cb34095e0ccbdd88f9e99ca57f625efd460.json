{"ast":null,"code":"var _jsxFileName = \"D:\\\\Payment-Gateway\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles/main.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Backend API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Alternative PaymentForm using individual elements (commented out for now)\n/*\nfunction IndividualCardPaymentForm({ formData, setFormData, paymentData, setPaymentData, setMessage, setMessageType, setLoading, setStep }) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Create payment intent\n      const intentRes = await axios.post(`${API_BASE_URL}/stripe/create-payment-intent`, {\n        amount: Math.round(formData.amount * 100),\n        currency: 'usd',\n        full_name: formData.full_name,\n        email: formData.email,\n        phone: formData.phone\n      });\n      const { client_secret, payment_intent_id } = intentRes.data;\n\n      // 2. Create payment method with individual elements\n      const { error: pmError, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: {\n          number: elements.getElement(CardNumberElement),\n          exp_month: elements.getElement(CardExpiryElement),\n          cvc: elements.getElement(CardCvcElement),\n        },\n        billing_details: {\n          name: formData.full_name,\n          email: formData.email,\n          phone: formData.phone\n        }\n      });\n      \n      if (pmError) {\n        setMessageType('error');\n        setMessage(pmError.message);\n        setLoading(false);\n        return;\n      }\n\n      // 3. Confirm card payment with Stripe.js\n      const { error: confirmError, paymentIntent } = await stripe.confirmCardPayment(client_secret, {\n        payment_method: paymentMethod.id\n      });\n      if (confirmError) {\n        setMessageType('error');\n        setMessage(confirmError.message);\n        setLoading(false);\n        return;\n      }\n      if (paymentIntent.status !== 'succeeded') {\n        setMessageType('error');\n        setMessage('Payment was not successful.');\n        setLoading(false);\n        return;\n      }\n\n      // 4. Notify backend to update transaction status\n      await axios.post(`${API_BASE_URL}/stripe/confirm-payment`, {\n        payment_intent_id,\n        payment_method_id: paymentMethod.id\n      });\n      setMessageType('success');\n      setMessage('Payment successful!');\n      setFormData({ full_name: '', email: '', phone: '', amount: '' });\n      setPaymentData({ payment_method: 'visa', card_number: '', expiry_month: '', expiry_year: '', cvv: '', cardholder_name: '' });\n      setStep(1);\n    } catch (error) {\n      setMessageType('error');\n      setMessage(error.response?.data?.detail || 'Payment failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Card Number</label>\n        <CardNumberElement options={cardElementOptions} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Expiry Date</label>\n            <CardExpiryElement options={cardElementOptions} />\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">CVC</label>\n            <CardCvcElement options={cardElementOptions} />\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" className=\"btn btn-pay text-white\" disabled={setLoading}>\n        PAY NOW\n      </button>\n    </form>\n  );\n}\n*/\n\nfunction PaymentForm({\n  formData,\n  setFormData,\n  paymentData,\n  setPaymentData,\n  setMessage,\n  setMessageType,\n  setLoading,\n  setStep,\n  loading\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // Custom options for CardElement\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        '::placeholder': {\n          color: '#aab7c4'\n        },\n        ':-webkit-autofill': {\n          color: '#fce883'\n        }\n      },\n      invalid: {\n        color: '#9e2146'\n      }\n    },\n    hidePostalCode: true // This makes postal code optional\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Create payment intent\n      const intentRes = await axios.post(`${API_BASE_URL}/stripe/create-payment-intent`, {\n        amount: Math.round(formData.amount * 100),\n        currency: 'usd',\n        full_name: formData.full_name,\n        email: formData.email,\n        phone: formData.phone\n      });\n      const {\n        client_secret,\n        payment_intent_id\n      } = intentRes.data;\n\n      // 2. Create payment method with Stripe.js\n      const cardElement = elements.getElement(CardElement);\n      const {\n        error: pmError,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          name: formData.full_name,\n          email: formData.email,\n          phone: formData.phone\n        }\n      });\n      if (pmError) {\n        setMessageType('error');\n        setMessage(pmError.message);\n        setLoading(false);\n        return;\n      }\n\n      // 3. Confirm card payment with Stripe.js\n      const {\n        error: confirmError,\n        paymentIntent\n      } = await stripe.confirmCardPayment(client_secret, {\n        payment_method: paymentMethod.id\n      });\n      if (confirmError) {\n        setMessageType('error');\n        setMessage(confirmError.message);\n        setLoading(false);\n        return;\n      }\n\n      // 4. Check payment status\n      if (paymentIntent.status === 'succeeded') {\n        // Payment succeeded, notify backend\n        try {\n          await axios.post(`${API_BASE_URL}/stripe/confirm-payment`, {\n            payment_intent_id,\n            payment_method_id: paymentMethod.id\n          });\n          setMessageType('success');\n          setMessage('Payment successful!');\n          setFormData({\n            full_name: '',\n            email: '',\n            phone: '',\n            amount: ''\n          });\n          setPaymentData({\n            payment_method: 'visa',\n            card_number: '',\n            expiry_month: '',\n            expiry_year: '',\n            cvv: '',\n            cardholder_name: ''\n          });\n          setStep(1);\n        } catch (backendError) {\n          var _backendError$respons, _backendError$respons2, _backendError$respons3, _backendError$respons4;\n          // If backend fails but payment succeeded, still show success\n          if (((_backendError$respons = backendError.response) === null || _backendError$respons === void 0 ? void 0 : _backendError$respons.status) === 400 && (_backendError$respons2 = backendError.response) !== null && _backendError$respons2 !== void 0 && (_backendError$respons3 = _backendError$respons2.data) !== null && _backendError$respons3 !== void 0 && (_backendError$respons4 = _backendError$respons3.detail) !== null && _backendError$respons4 !== void 0 && _backendError$respons4.includes('already succeeded')) {\n            setMessageType('success');\n            setMessage('Payment successful! (Transaction already processed)');\n            setFormData({\n              full_name: '',\n              email: '',\n              phone: '',\n              amount: ''\n            });\n            setPaymentData({\n              payment_method: 'visa',\n              card_number: '',\n              expiry_month: '',\n              expiry_year: '',\n              cvv: '',\n              cardholder_name: ''\n            });\n            setStep(1);\n          } else {\n            setMessageType('error');\n            setMessage('Payment succeeded but there was an issue with transaction recording. Please contact support.');\n          }\n        }\n      } else if (paymentIntent.status === 'requires_action') {\n        setMessageType('error');\n        setMessage('Payment requires additional authentication. Please try again.');\n      } else {\n        setMessageType('error');\n        setMessage(`Payment was not successful. Status: ${paymentIntent.status}`);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessageType('error');\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Payment failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Card Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        options: cardElementOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-pay text-white\",\n      disabled: loading,\n      children: loading ? 'Processing...' : 'PAY NOW'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentForm, \"EKvoGMX7lxsZ5SGPpYu2aKFzClQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nfunction App() {\n  _s2();\n  const [step, setStep] = useState(1); // 1: Basic info, 2: Payment method, 3: Card details\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    phone: '',\n    amount: ''\n  });\n  const [paymentData, setPaymentData] = useState({\n    payment_method: 'visa',\n    card_number: '',\n    expiry_month: '',\n    expiry_year: '',\n    cvv: '',\n    cardholder_name: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [cardValidation, setCardValidation] = useState({});\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePaymentInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Special handling for card number formatting\n    if (name === 'card_number') {\n      // Remove all non-digits\n      const digitsOnly = value.replace(/\\D/g, '');\n\n      // Add spaces after every 4 digits\n      const formatted = digitsOnly.replace(/(\\d{4})(?=\\d)/g, '$1 ');\n\n      // Limit to 19 characters (16 digits + 3 spaces)\n      const limited = formatted.slice(0, 19);\n      setPaymentData(prev => ({\n        ...prev,\n        [name]: limited\n      }));\n    } else {\n      setPaymentData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const validateBasicInfo = () => {\n    if (!formData.full_name || !formData.email || !formData.phone || !formData.amount) {\n      setMessage('Please fill in all fields');\n      setMessageType('error');\n      return false;\n    }\n    if (parseFloat(formData.amount) <= 0) {\n      setMessage('Amount must be greater than 0');\n      setMessageType('error');\n      return false;\n    }\n    return true;\n  };\n  const validateCardDetails = async () => {\n    // Only validate if card details are provided\n    if (!paymentData.card_number || !paymentData.expiry_month || !paymentData.expiry_year || !paymentData.cvv) {\n      setMessage('Please fill in all card details');\n      setMessageType('error');\n      return false;\n    }\n\n    // Client-side validation first\n    const cardNumber = paymentData.card_number.replace(/\\s/g, '');\n    if (cardNumber.length < 13 || cardNumber.length > 19) {\n      setMessage('Invalid card number length');\n      setMessageType('error');\n      return false;\n    }\n\n    // Basic Luhn algorithm check\n    const luhnCheck = num => {\n      let arr = (num + '').split('').reverse().map(x => parseInt(x));\n      let lastDigit = arr.splice(0, 1)[0];\n      let sum = arr.reduce((acc, val, i) => i % 2 !== 0 ? acc + val : acc + val * 2 % 9 || 9, 0);\n      sum += lastDigit;\n      return sum % 10 === 0;\n    };\n    if (!luhnCheck(cardNumber)) {\n      setMessage('Invalid card number');\n      setMessageType('error');\n      return false;\n    }\n\n    // Check expiry date\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = currentDate.getMonth() + 1;\n    const expYear = parseInt(paymentData.expiry_year);\n    const expMonth = parseInt(paymentData.expiry_month);\n    if (expYear < currentYear || expYear === currentYear && expMonth < currentMonth) {\n      setMessage('Card has expired');\n      setMessageType('error');\n      return false;\n    }\n\n    // Check CVV length\n    const expectedCvvLength = paymentData.payment_method === 'amex' ? 4 : 3;\n    if (paymentData.cvv.length !== expectedCvvLength) {\n      setMessage(`CVV must be ${expectedCvvLength} digits for ${paymentData.payment_method.toUpperCase()}`);\n      setMessageType('error');\n      return false;\n    }\n\n    // Try backend validation if available, but don't fail if it's not\n    try {\n      const response = await axios.post(`${API_BASE_URL}/validate-card`, {\n        card_number: paymentData.card_number,\n        expiry_month: paymentData.expiry_month,\n        expiry_year: paymentData.expiry_year,\n        cvv: paymentData.cvv\n      }, {\n        timeout: 5000 // 5 second timeout\n      });\n      if (response.data.valid) {\n        setCardValidation(response.data);\n        return true;\n      } else {\n        setMessage(`Card validation failed: ${response.data.error}`);\n        setMessageType('error');\n        return false;\n      }\n    } catch (error) {\n      console.log('Backend validation failed, proceeding with client-side validation:', error.message);\n      // If backend validation fails, proceed with client-side validation\n      setCardValidation({\n        valid: true,\n        card_type: paymentData.payment_method,\n        masked_number: `**** **** **** ${cardNumber.slice(-4)}`\n      });\n      return true;\n    }\n  };\n  const handleNextStep = async () => {\n    setMessage('');\n    if (step === 1) {\n      if (validateBasicInfo()) {\n        setStep(2);\n      }\n    } else if (step === 2) {\n      // Simply move to step 3 without validation - validation happens on submit\n      setStep(3);\n    }\n  };\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_actual_publishable_key_here');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDD12 GenZ Payment Gateway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your payment information is encrypted and secure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${messageType === 'success' ? 'success-alert' : 'error-alert'} mb-4`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-step ${step >= 1 ? 'active' : ''}`,\n          children: \"1. Personal Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-step ${step >= 2 ? 'active' : ''}`,\n          children: \"2. Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-step ${step >= 3 ? 'active' : ''}`,\n          children: \"3. Card Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Personal Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"full_name\",\n            className: \"form-label\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"full_name\",\n            name: \"full_name\",\n            value: formData.full_name,\n            onChange: handleInputChange,\n            required: true,\n            placeholder: \"Enter your full name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            required: true,\n            placeholder: \"Enter your email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            className: \"form-label\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            className: \"form-control\",\n            id: \"phone\",\n            name: \"phone\",\n            value: formData.phone,\n            onChange: handleInputChange,\n            required: true,\n            placeholder: \"Enter your phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            className: \"form-label\",\n            children: \"Payment Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              children: \"$\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"amount\",\n              name: \"amount\",\n              value: formData.amount,\n              onChange: handleInputChange,\n              required: true,\n              min: \"0.01\",\n              step: \"0.01\",\n              placeholder: \"0.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary w-100\",\n          onClick: handleNextStep,\n          children: \"Continue to Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Payment Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment-methods\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"visa\",\n              name: \"payment_method\",\n              value: \"visa\",\n              checked: paymentData.payment_method === 'visa',\n              onChange: handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"visa\",\n              className: \"payment-method-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCB3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Visa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"mastercard\",\n              name: \"payment_method\",\n              value: \"mastercard\",\n              checked: paymentData.payment_method === 'mastercard',\n              onChange: handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"mastercard\",\n              className: \"payment-method-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCB3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Mastercard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"amex\",\n              name: \"payment_method\",\n              value: \"amex\",\n              checked: paymentData.payment_method === 'amex',\n              onChange: handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"amex\",\n              className: \"payment-method-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCB3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"American Express\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-method-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"discover\",\n              name: \"payment_method\",\n              value: \"discover\",\n              checked: paymentData.payment_method === 'discover',\n              onChange: handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"discover\",\n              className: \"payment-method-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"card-icon\",\n                children: \"\\uD83D\\uDCB3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Discover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary me-2\",\n            onClick: () => setStep(1),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            onClick: handleNextStep,\n            children: \"Continue to Card Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-step\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Card Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-front\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-type\",\n              children: paymentData.payment_method.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-number\",\n              children: paymentData.card_number ? `**** **** **** ${paymentData.card_number.slice(-4)}` : '**** **** **** ****'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"cardholder\",\n                children: paymentData.cardholder_name || 'CARDHOLDER NAME'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"expiry\",\n                children: [paymentData.expiry_month || 'MM', \"/\", paymentData.expiry_year || 'YY']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Elements, {\n          stripe: stripePromise,\n          children: /*#__PURE__*/_jsxDEV(PaymentForm, {\n            formData: formData,\n            setFormData: setFormData,\n            paymentData: paymentData,\n            setPaymentData: setPaymentData,\n            setMessage: setMessage,\n            setMessageType: setMessageType,\n            setLoading: setLoading,\n            setStep: setStep,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"n4Ss3eADwjOEUy8rG4CXNEFgPhs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaymentForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","axios","loadStripe","Elements","CardElement","CardNumberElement","CardExpiryElement","CardCvcElement","useStripe","useElements","jsxDEV","_jsxDEV","API_BASE_URL","PaymentForm","formData","setFormData","paymentData","setPaymentData","setMessage","setMessageType","setLoading","setStep","loading","_s","stripe","elements","cardElementOptions","style","base","fontSize","color","invalid","hidePostalCode","handleSubmit","e","preventDefault","intentRes","post","amount","Math","round","currency","full_name","email","phone","client_secret","payment_intent_id","data","cardElement","getElement","error","pmError","paymentMethod","createPaymentMethod","type","card","billing_details","name","message","confirmError","paymentIntent","confirmCardPayment","payment_method","id","status","payment_method_id","card_number","expiry_month","expiry_year","cvv","cardholder_name","backendError","_backendError$respons","_backendError$respons2","_backendError$respons3","_backendError$respons4","response","detail","includes","_error$response","_error$response$data","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","options","disabled","_c","App","_s2","step","messageType","cardValidation","setCardValidation","handleInputChange","value","target","prev","handlePaymentInputChange","digitsOnly","replace","formatted","limited","slice","validateBasicInfo","parseFloat","validateCardDetails","cardNumber","length","luhnCheck","num","arr","split","reverse","map","x","parseInt","lastDigit","splice","sum","reduce","acc","val","i","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","expYear","expMonth","expectedCvvLength","toUpperCase","timeout","valid","console","log","card_type","masked_number","handleNextStep","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","htmlFor","onChange","required","placeholder","min","onClick","checked","_c2","$RefreshReg$"],"sources":["D:/Payment-Gateway/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './styles/main.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Backend API URL\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Alternative PaymentForm using individual elements (commented out for now)\n/*\nfunction IndividualCardPaymentForm({ formData, setFormData, paymentData, setPaymentData, setMessage, setMessageType, setLoading, setStep }) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Create payment intent\n      const intentRes = await axios.post(`${API_BASE_URL}/stripe/create-payment-intent`, {\n        amount: Math.round(formData.amount * 100),\n        currency: 'usd',\n        full_name: formData.full_name,\n        email: formData.email,\n        phone: formData.phone\n      });\n      const { client_secret, payment_intent_id } = intentRes.data;\n\n      // 2. Create payment method with individual elements\n      const { error: pmError, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: {\n          number: elements.getElement(CardNumberElement),\n          exp_month: elements.getElement(CardExpiryElement),\n          cvc: elements.getElement(CardCvcElement),\n        },\n        billing_details: {\n          name: formData.full_name,\n          email: formData.email,\n          phone: formData.phone\n        }\n      });\n      \n      if (pmError) {\n        setMessageType('error');\n        setMessage(pmError.message);\n        setLoading(false);\n        return;\n      }\n\n      // 3. Confirm card payment with Stripe.js\n      const { error: confirmError, paymentIntent } = await stripe.confirmCardPayment(client_secret, {\n        payment_method: paymentMethod.id\n      });\n      if (confirmError) {\n        setMessageType('error');\n        setMessage(confirmError.message);\n        setLoading(false);\n        return;\n      }\n      if (paymentIntent.status !== 'succeeded') {\n        setMessageType('error');\n        setMessage('Payment was not successful.');\n        setLoading(false);\n        return;\n      }\n\n      // 4. Notify backend to update transaction status\n      await axios.post(`${API_BASE_URL}/stripe/confirm-payment`, {\n        payment_intent_id,\n        payment_method_id: paymentMethod.id\n      });\n      setMessageType('success');\n      setMessage('Payment successful!');\n      setFormData({ full_name: '', email: '', phone: '', amount: '' });\n      setPaymentData({ payment_method: 'visa', card_number: '', expiry_month: '', expiry_year: '', cvv: '', cardholder_name: '' });\n      setStep(1);\n    } catch (error) {\n      setMessageType('error');\n      setMessage(error.response?.data?.detail || 'Payment failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Card Number</label>\n        <CardNumberElement options={cardElementOptions} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Expiry Date</label>\n            <CardExpiryElement options={cardElementOptions} />\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">CVC</label>\n            <CardCvcElement options={cardElementOptions} />\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" className=\"btn btn-pay text-white\" disabled={setLoading}>\n        PAY NOW\n      </button>\n    </form>\n  );\n}\n*/\n\nfunction PaymentForm({ formData, setFormData, paymentData, setPaymentData, setMessage, setMessageType, setLoading, setStep, loading }) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // Custom options for CardElement\n  const cardElementOptions = {\n    style: {\n      base: {\n        fontSize: '16px',\n        color: '#424770',\n        '::placeholder': {\n          color: '#aab7c4',\n        },\n        ':-webkit-autofill': {\n          color: '#fce883',\n        },\n      },\n      invalid: {\n        color: '#9e2146',\n      },\n    },\n    hidePostalCode: true, // This makes postal code optional\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      // 1. Create payment intent\n      const intentRes = await axios.post(`${API_BASE_URL}/stripe/create-payment-intent`, {\n        amount: Math.round(formData.amount * 100),\n        currency: 'usd',\n        full_name: formData.full_name,\n        email: formData.email,\n        phone: formData.phone\n      });\n      const { client_secret, payment_intent_id } = intentRes.data;\n\n      // 2. Create payment method with Stripe.js\n      const cardElement = elements.getElement(CardElement);\n      const { error: pmError, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: {\n          name: formData.full_name,\n          email: formData.email,\n          phone: formData.phone\n        }\n      });\n      if (pmError) {\n        setMessageType('error');\n        setMessage(pmError.message);\n        setLoading(false);\n        return;\n      }\n\n      // 3. Confirm card payment with Stripe.js\n      const { error: confirmError, paymentIntent } = await stripe.confirmCardPayment(client_secret, {\n        payment_method: paymentMethod.id\n      });\n      if (confirmError) {\n        setMessageType('error');\n        setMessage(confirmError.message);\n        setLoading(false);\n        return;\n      }\n      \n      // 4. Check payment status\n      if (paymentIntent.status === 'succeeded') {\n        // Payment succeeded, notify backend\n        try {\n          await axios.post(`${API_BASE_URL}/stripe/confirm-payment`, {\n            payment_intent_id,\n            payment_method_id: paymentMethod.id\n          });\n          setMessageType('success');\n          setMessage('Payment successful!');\n          setFormData({ full_name: '', email: '', phone: '', amount: '' });\n          setPaymentData({ payment_method: 'visa', card_number: '', expiry_month: '', expiry_year: '', cvv: '', cardholder_name: '' });\n          setStep(1);\n        } catch (backendError) {\n          // If backend fails but payment succeeded, still show success\n          if (backendError.response?.status === 400 && \n              backendError.response?.data?.detail?.includes('already succeeded')) {\n            setMessageType('success');\n            setMessage('Payment successful! (Transaction already processed)');\n            setFormData({ full_name: '', email: '', phone: '', amount: '' });\n            setPaymentData({ payment_method: 'visa', card_number: '', expiry_month: '', expiry_year: '', cvv: '', cardholder_name: '' });\n            setStep(1);\n          } else {\n            setMessageType('error');\n            setMessage('Payment succeeded but there was an issue with transaction recording. Please contact support.');\n          }\n        }\n      } else if (paymentIntent.status === 'requires_action') {\n        setMessageType('error');\n        setMessage('Payment requires additional authentication. Please try again.');\n      } else {\n        setMessageType('error');\n        setMessage(`Payment was not successful. Status: ${paymentIntent.status}`);\n      }\n    } catch (error) {\n      setMessageType('error');\n      setMessage(error.response?.data?.detail || 'Payment failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Render CardElement with custom options */}\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Card Details</label>\n        <CardElement options={cardElementOptions} />\n      </div>\n      <button type=\"submit\" className=\"btn btn-pay text-white\" disabled={loading}>\n        {loading ? 'Processing...' : 'PAY NOW'}\n      </button>\n    </form>\n  );\n}\n\nfunction App() {\n  const [step, setStep] = useState(1); // 1: Basic info, 2: Payment method, 3: Card details\n  const [formData, setFormData] = useState({\n    full_name: '',\n    email: '',\n    phone: '',\n    amount: ''\n  });\n  \n  const [paymentData, setPaymentData] = useState({\n    payment_method: 'visa',\n    card_number: '',\n    expiry_month: '',\n    expiry_year: '',\n    cvv: '',\n    cardholder_name: ''\n  });\n  \n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [cardValidation, setCardValidation] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handlePaymentInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Special handling for card number formatting\n    if (name === 'card_number') {\n      // Remove all non-digits\n      const digitsOnly = value.replace(/\\D/g, '');\n      \n      // Add spaces after every 4 digits\n      const formatted = digitsOnly.replace(/(\\d{4})(?=\\d)/g, '$1 ');\n      \n      // Limit to 19 characters (16 digits + 3 spaces)\n      const limited = formatted.slice(0, 19);\n      \n      setPaymentData(prev => ({\n        ...prev,\n        [name]: limited\n      }));\n    } else {\n      setPaymentData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  const validateBasicInfo = () => {\n    if (!formData.full_name || !formData.email || !formData.phone || !formData.amount) {\n      setMessage('Please fill in all fields');\n      setMessageType('error');\n      return false;\n    }\n    if (parseFloat(formData.amount) <= 0) {\n      setMessage('Amount must be greater than 0');\n      setMessageType('error');\n      return false;\n    }\n    return true;\n  };\n\n  const validateCardDetails = async () => {\n    // Only validate if card details are provided\n    if (!paymentData.card_number || !paymentData.expiry_month || !paymentData.expiry_year || !paymentData.cvv) {\n      setMessage('Please fill in all card details');\n      setMessageType('error');\n      return false;\n    }\n\n    // Client-side validation first\n    const cardNumber = paymentData.card_number.replace(/\\s/g, '');\n    if (cardNumber.length < 13 || cardNumber.length > 19) {\n      setMessage('Invalid card number length');\n      setMessageType('error');\n      return false;\n    }\n\n    // Basic Luhn algorithm check\n    const luhnCheck = (num) => {\n      let arr = (num + '')\n        .split('')\n        .reverse()\n        .map(x => parseInt(x));\n      let lastDigit = arr.splice(0, 1)[0];\n      let sum = arr.reduce((acc, val, i) => (i % 2 !== 0 ? acc + val : acc + ((val * 2) % 9) || 9), 0);\n      sum += lastDigit;\n      return sum % 10 === 0;\n    };\n\n    if (!luhnCheck(cardNumber)) {\n      setMessage('Invalid card number');\n      setMessageType('error');\n      return false;\n    }\n\n    // Check expiry date\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    const currentMonth = currentDate.getMonth() + 1;\n    \n    const expYear = parseInt(paymentData.expiry_year);\n    const expMonth = parseInt(paymentData.expiry_month);\n    \n    if (expYear < currentYear || (expYear === currentYear && expMonth < currentMonth)) {\n      setMessage('Card has expired');\n      setMessageType('error');\n      return false;\n    }\n\n    // Check CVV length\n    const expectedCvvLength = paymentData.payment_method === 'amex' ? 4 : 3;\n    if (paymentData.cvv.length !== expectedCvvLength) {\n      setMessage(`CVV must be ${expectedCvvLength} digits for ${paymentData.payment_method.toUpperCase()}`);\n      setMessageType('error');\n      return false;\n    }\n\n    // Try backend validation if available, but don't fail if it's not\n    try {\n      const response = await axios.post(`${API_BASE_URL}/validate-card`, {\n        card_number: paymentData.card_number,\n        expiry_month: paymentData.expiry_month,\n        expiry_year: paymentData.expiry_year,\n        cvv: paymentData.cvv\n      }, {\n        timeout: 5000 // 5 second timeout\n      });\n\n      if (response.data.valid) {\n        setCardValidation(response.data);\n        return true;\n      } else {\n        setMessage(`Card validation failed: ${response.data.error}`);\n        setMessageType('error');\n        return false;\n      }\n    } catch (error) {\n      console.log('Backend validation failed, proceeding with client-side validation:', error.message);\n      // If backend validation fails, proceed with client-side validation\n      setCardValidation({\n        valid: true,\n        card_type: paymentData.payment_method,\n        masked_number: `**** **** **** ${cardNumber.slice(-4)}`\n      });\n      return true;\n    }\n  };\n\n  const handleNextStep = async () => {\n    setMessage('');\n    \n    if (step === 1) {\n      if (validateBasicInfo()) {\n        setStep(2);\n      }\n    } else if (step === 2) {\n      // Simply move to step 3 without validation - validation happens on submit\n      setStep(3);\n    }\n  };\n\n  const stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY || 'pk_test_your_actual_publishable_key_here');\n\n  return (\n    <div className=\"payment-container\">\n      <div className=\"payment-card\">\n        <div className=\"payment-header\">\n          <h1>🔒 GenZ Payment Gateway</h1>\n          <p>Your payment information is encrypted and secure</p>\n        </div>\n\n        {message && (\n          <div className={`alert ${messageType === 'success' ? 'success-alert' : 'error-alert'} mb-4`}>\n            {message}\n          </div>\n        )}\n\n        <div className=\"progress-bar mb-4\">\n          <div className={`progress-step ${step >= 1 ? 'active' : ''}`}>1. Personal Info</div>\n          <div className={`progress-step ${step >= 2 ? 'active' : ''}`}>2. Payment Method</div>\n          <div className={`progress-step ${step >= 3 ? 'active' : ''}`}>3. Card Details</div>\n        </div>\n\n        {step === 1 && (\n          <div className=\"payment-step\">\n            <h3>Personal Information</h3>\n            <div className=\"mb-3\">\n              <label htmlFor=\"full_name\" className=\"form-label\">Full Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"full_name\"\n                name=\"full_name\"\n                value={formData.full_name}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter your full name\"\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">Email Address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter your email\"\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"phone\" className=\"form-label\">Phone Number</label>\n              <input\n                type=\"tel\"\n                className=\"form-control\"\n                id=\"phone\"\n                name=\"phone\"\n                value={formData.phone}\n                onChange={handleInputChange}\n                required\n                placeholder=\"Enter your phone number\"\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <label htmlFor=\"amount\" className=\"form-label\">Payment Amount</label>\n              <div className=\"input-group\">\n                <span className=\"input-group-text\">$</span>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"amount\"\n                  name=\"amount\"\n                  value={formData.amount}\n                  onChange={handleInputChange}\n                  required\n                  min=\"0.01\"\n                  step=\"0.01\"\n                  placeholder=\"0.00\"\n                />\n              </div>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary w-100\"\n              onClick={handleNextStep}\n            >\n              Continue to Payment Method\n            </button>\n          </div>\n        )}\n        {step === 2 && (\n          <div className=\"payment-step\">\n            <h3>Select Payment Method</h3>\n            <div className=\"payment-methods\">\n              <div className=\"payment-method-option\">\n                <input\n                  type=\"radio\"\n                  id=\"visa\"\n                  name=\"payment_method\"\n                  value=\"visa\"\n                  checked={paymentData.payment_method === 'visa'}\n                  onChange={handlePaymentInputChange}\n                />\n                <label htmlFor=\"visa\" className=\"payment-method-label\">\n                  <span className=\"card-icon\">💳</span>\n                  <span>Visa</span>\n                </label>\n              </div>\n              \n              <div className=\"payment-method-option\">\n                <input\n                  type=\"radio\"\n                  id=\"mastercard\"\n                  name=\"payment_method\"\n                  value=\"mastercard\"\n                  checked={paymentData.payment_method === 'mastercard'}\n                  onChange={handlePaymentInputChange}\n                />\n                <label htmlFor=\"mastercard\" className=\"payment-method-label\">\n                  <span className=\"card-icon\">💳</span>\n                  <span>Mastercard</span>\n                </label>\n              </div>\n              \n              <div className=\"payment-method-option\">\n                <input\n                  type=\"radio\"\n                  id=\"amex\"\n                  name=\"payment_method\"\n                  value=\"amex\"\n                  checked={paymentData.payment_method === 'amex'}\n                  onChange={handlePaymentInputChange}\n                />\n                <label htmlFor=\"amex\" className=\"payment-method-label\">\n                  <span className=\"card-icon\">💳</span>\n                  <span>American Express</span>\n                </label>\n              </div>\n              \n              <div className=\"payment-method-option\">\n                <input\n                  type=\"radio\"\n                  id=\"discover\"\n                  name=\"payment_method\"\n                  value=\"discover\"\n                  checked={paymentData.payment_method === 'discover'}\n                  onChange={handlePaymentInputChange}\n                />\n                <label htmlFor=\"discover\" className=\"payment-method-label\">\n                  <span className=\"card-icon\">💳</span>\n                  <span>Discover</span>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"mt-4\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary me-2\"\n                onClick={() => setStep(1)}\n              >\n                Back\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={handleNextStep}\n              >\n                Continue to Card Details\n              </button>\n            </div>\n          </div>\n        )}\n        {step === 3 && (\n          <div className=\"payment-step\">\n            <h3>Card Details</h3>\n            <div className=\"card-preview\">\n              <div className=\"card-front\">\n                <div className=\"card-type\">{paymentData.payment_method.toUpperCase()}</div>\n                <div className=\"card-number\">\n                  {paymentData.card_number ? \n                    `**** **** **** ${paymentData.card_number.slice(-4)}` : \n                    '**** **** **** ****'\n                  }\n                </div>\n                <div className=\"card-details\">\n                  <span className=\"cardholder\">{paymentData.cardholder_name || 'CARDHOLDER NAME'}</span>\n                  <span className=\"expiry\">{paymentData.expiry_month || 'MM'}/{paymentData.expiry_year || 'YY'}</span>\n                </div>\n              </div>\n            </div>\n\n            <Elements stripe={stripePromise}>\n              <PaymentForm\n                formData={formData}\n                setFormData={setFormData}\n                paymentData={paymentData}\n                setPaymentData={setPaymentData}\n                setMessage={setMessage}\n                setMessageType={setMessageType}\n                setLoading={setLoading}\n                setStep={setStep}\n                loading={loading}\n              />\n            </Elements>\n          </div>\n        )}\n\n        {/* <div className=\"text-center mt-4\">\n          <small className=\"text-muted\">\n            🔒 PCI DSS Compliant • 256-bit SSL Encryption • Tokenized Payments\n          </small>\n        </div> */}\n        \n        {/* <div className=\"text-center mt-2\">\n          <small className=\"text-muted\">\n            Backend: {API_BASE_URL}\n          </small>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}